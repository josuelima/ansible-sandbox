{#
    ==== Default server template for debops.nginx role ====
#}
{#

    ---- SSL is enabled by default, disable if requested ----
#}
{% set nginx_tpl_ssl = True                                                    %}
{% if ((nginx_ssl is undefined or (nginx_ssl is defined and not nginx_ssl)) or
       (item.ssl is defined and not item.ssl))                                 %}
{%     set nginx_tpl_ssl = False                                               %}
{% endif                                                                       %}
{#

    ---- Ports to listen on, default server, HTTPS redirect ----
#}
{% set nginx_tpl_listen         = item.listen     | default(['[::]:80'])       %}
{% set nginx_tpl_listen_ssl     = item.listen_ssl | default(['[::]:443'])      %}
{% set nginx_tpl_default_server = ''                                           %}
{% if ((item.default is defined and item.default) or
       ((nginx_default_name is defined and nginx_default_name) and
        (item.name is defined and item.name) and
        (nginx_default_name in item.name) and
        (item.default is undefined or (item.default is defined and item.default))) or
       ((ansible_local is defined and ansible_local) and
        (ansible_local.nginx is defined and ansible_local.nginx) and
        (ansible_local.nginx.default_server is defined and ansible_local.nginx.default_server) and
        (ansible_local.nginx.default_server in item.name)) or
       ((nginx_register_default_server_first is defined and nginx_register_default_server_first) and
        (nginx_register_default_server_first in item.name)) or
       (item.name is undefined))                                               %}
{%     set nginx_tpl_default_server = 'default_server ipv6only=off'            %}
{% endif                                                                       %}
{% set nginx_tpl_default_redirect_code = '307'                                 %}
{% set nginx_tpl_http_redirect = item.redirect | default('https://$host$request_uri') %}
{#

{#

    ---- root directory ----
#}
{% set nginx_tpl_root = item.root | default(nginx_default_root)                %}
{% if (item.name is defined and item.name)                                     %}
{%     if (item.owner is defined and item.owner)                               %}
{%         set nginx_tpl_root = item.root | default('/srv/www/' + item.owner + '/sites/' + item.name[0] + '/public') %}
{%     else                                                                    %}
{%         set nginx_tpl_root = item.root | default('/srv/www/sites/' + item.name[0] + '/public') %}
{%     endif                                                                   %}
{% endif                                                                       %}
{% if (item.root_suffix is defined and item.root_suffix)                       %}
{%     set nginx_tpl_root = nginx_tpl_root + '/' + item.root_suffix            %}
{% endif                                                                       %}
{#

    ---- macro which prints location entries from 'location' hash, flat ----
#}
{% macro print_location(location,location_allow=[],location_referers=[],location_deny=[])                                              %}
{%     if location is defined                                                  %}
{%         for path in location.keys()                                         %}
{%             if location[path]                                               %}
        location {{ path }} {
{%                 if location_referers is defined                             %}
{%                     if location_referers[path] is defined and location_referers[path] %}
                valid_referers none blocked {{ location_referers[path] | join(' ') }};
                if ($invalid_referer) {
                        return 403;
                }
{%                     endif                                                   %}
{%                 endif                                                       %}
                {{ item.location[path] | indent(16) }}
{%                 if location_allow is defined                                %}
{%                     if location_allow[path] is defined and location_allow[path] %}
{%                         for address in location_allow[path]                 %}
                allow {{ address }};
{%                         endfor                                              %}
{%                         if location_deny is defined                         %}
{%                             if location_deny[path] is defined               %}
{%                                 for address in location_deny[path]          %}
                deny {{ address }};
{%                                 endfor                                      %}
{%                             endif                                           %}
{%                         else                                                %}
                deny all;
{%                         endif                                               %}
{%                     endif                                                   %}
{%                 endif                                                       %}
        }

{%             endif                                                           %}
{%         endfor                                                              %}
{%     endif                                                                   %}
{% endmacro                                                                    %}
{#

    ---- macro which prints location entries from 'location_list' list, recursive
#}
{% macro print_location_list(location_list)                                    %}
{%     if location_list is defined                                             %}
{%         for entry in location_list                                          %}
{%             if entry.pattern is defined and entry.pattern                   %}
        location {{ entry.pattern_prefix | default('') + entry.pattern }} {
{%                 if entry.referers is defined and entry.referers             %}
                valid_referers none blocked {{ entry.referers | join(' ') }};
                if ($invalid_referer) {
                        return 403;
                }
{%                 endif                                                       %}
{%                 if entry.options is defined and entry.options               %}
                {{ entry.options | indent(16) }}
{%                 endif                                                       %}
{%                 if entry.allow is defined and entry.allow                   %}
{%                     for address in entry.allow                              %}
                allow {{ address }};
{%                     endfor                                                  %}
{%                     if entry.deny is defined and entry.deny                 %}
{%                         for address in entry.deny                           %}
                deny {{ address }};
{%                         endfor                                              %}
{%                     else                                                    %}
                deny all;
{%                     endif                                                   %}
{%                 endif                                                       %}
{%                 if entry.locations is defined and entry.locations           %}
{{ print_location_list(entry.locations) | indent(8, true) }}
{%                 endif                                                       %}
        }
{%             endif                                                           %}
{% if not loop.last %}

{% endif %}
{%         endfor                                                              %}
{%     endif                                                                   %}
{% endmacro                                                                    %}
{#

    ---- nginx server template begins here ----
#}
# This file is managed by Ansible, all changes will be lost

{% if item.name is defined and item.name %}
# nginx server configuration for:
{% for address in item.name %}
#    - {% if nginx_tpl_ssl %}https{% else %}http{% endif %}://{{ address }}/
{% endfor %}
{% if item.by_role is defined and item.by_role %}# generated by Ansible role: {{ item.by_role }}{% endif %}

{% else %}
# nginx server default configuration
{% if item.by_role is defined and item.by_role %}# generated by Ansible role: {{ item.by_role }}{% endif %}
{% endif %}

{% if ((item.redirect_from is defined and item.redirect_from) and
       (item.name is defined and item.name)) %}
server {
{% if (item.listen is undefined or (item.listen is defined and item.listen)) %}
{% for port in nginx_tpl_listen %}
        listen {{ port }};
{% endfor %}

{% if item.redirect_from is iterable %}
{% for name in item.redirect_from %}
        server_name {{ name }};
{% endfor %}
{% else %}{# item.redirect_from is True #}
{% for name in item.name[1:] %}
        server_name {{ name }};
{% endfor %}
{% endif %}

{% endif %}
        return {{ item.redirect_code | default(nginx_tpl_default_redirect_code) }} $scheme://{{ item.name[0] }}$request_uri;
}

{% endif %}
server {
{% if (item.listen is undefined or (item.listen is defined and item.listen)) %}
{% for port in nginx_tpl_listen %}
        listen {{ port }}{% if (loop.first and nginx_tpl_default_server) %} {{ nginx_tpl_default_server }}{% endif %};
{% endfor %}

{% if item.name is defined and item.name %}
{% if item.redirect_from is defined and item.redirect_from %}
        server_name {{ item.name[0] }};

{% else %}
{% for name in item.name %}
        server_name {{ name }};
{% endfor %}

{% endif %}
{% endif %}
{% endif %}
{% if (nginx_tpl_ssl is defined and nginx_tpl_ssl) %}
{% if (item.listen is undefined or (item.listen is defined and item.listen)) %}
        return {{ item.redirect_code | default(nginx_tpl_default_redirect_code) }} {{ nginx_tpl_http_redirect }};
}

server {
{% endif %}
{% for port in nginx_tpl_listen_ssl %}
        listen {{ port }} ssl{% if (nginx_version is defined and nginx_version.stdout | version_compare('1.4','>=')) %} spdy{% endif %}{% if (loop.first and nginx_tpl_default_server) %} {{ nginx_tpl_default_server }}{% endif %};
{% endfor %}

        ssl_certificate           {{ nginx_tpl_ssl_certificate }};
        ssl_certificate_key       {{ nginx_tpl_ssl_certificate_key }};
        ssl_protocols             TLSv1 TLSv1.1 TLSv1.2;
        ssl_prefer_server_ciphers on;
        ssl_ciphers               "{{ nginx_ssl_ciphers[item.ssl_ciphers | default(nginx_default_ssl_ciphers)] }}"; # SSL cipher list: {{ item.ssl_ciphers | default(nginx_default_ssl_ciphers) }}
        ssl_dhparam               /etc/nginx/dhparam_2048.pem;
        ssl_ecdh_curve            {{ item.ssl_curve | default(nginx_default_ssl_curve) }};
{% if (nginx_version is defined and nginx_version.stdout | version_compare('1.4','>=')) and nginx_ocsp_resolvers is defined and nginx_ocsp_resolvers %}
        ssl_stapling              on;
        ssl_stapling_verify       on;
{% set nginx_tpl_ocsp_resolver = nginx_ocsp_resolvers[0] if '.' in nginx_ocsp_resolvers[0] else '[' + nginx_ocsp_resolvers[0] + ']' %}
        resolver                  {{ nginx_tpl_ocsp_resolver }} valid=300s;
        resolver_timeout          5s;
{% endif %}
        add_header                Strict-Transport-Security "max-age={{ nginx_hsts_age | default('15768000') }}{% if nginx_hsts_subdomains is defined and nginx_hsts_subdomains %}; includeSubDomains{% endif %}";

{% if item.name is defined and item.name %}
{% if item.redirect_from is defined and item.redirect_from %}
        server_name {{ item.name[0] }};

{% else %}
{% for name in item.name %}
        server_name {{ name }};
{% endfor %}

{% endif %}
{% endif %}
{% endif %}{# ---- end of nginx_tpl_ssl ---- #}
{#

    ---- Code below is shared between HTTP and HTTPS ----
#}
{% if (not nginx_tpl_ssl and (item.redirect is defined and item.redirect)) %}
        return {{ item.redirect_code | default(nginx_tpl_default_redirect_code) }} {{ nginx_tpl_http_redirect }};
{% elif (nginx_tpl_ssl and (item.redirect_ssl is defined and item.redirect_ssl)) %}
        return {{ item.redirect_code | default(nginx_tpl_default_redirect_code) }} {{ item.redirect_ssl }};
{% else %}
        keepalive_timeout {{ item.keepalive | default(nginx_default_keepalive_timeout) }};

        root {{ nginx_tpl_root }};
{% if item.name is defined and item.name %}

        access_log /var/log/nginx/{{ item.name[0] }}_access.log;
        error_log /var/log/nginx/{{ item.name[0] }}_error.log;
{% endif %}

{% block nginx_tpl_block_index %}
        index index.html index.htm;
{% endblock %}

{% if item.error_pages is defined and item.error_pages %}
{% for code, location in item.error_pages.iteritems() %}
        error_page {{ code }} {{ location }};
        location {{ location }} {
                internal;
        }

{% endfor %}
{% endif %}
{% if item.options is defined and item.options %}
        {{ item.options | indent(8) }}

{% endif %}
  # Temporary fix for CVE-2013-4547
  # http://mailman.nginx.org/pipermail/nginx-announce/2013/000125.html
  if ($request_uri ~ " ") {
    return 444;
  }

{% if item.userdir is defined and item.userdir %}
  location ~ ^/~(.+?)(/.*)?$ {
    alias /srv/www/$1/userdir/public$2;
    index index.html index.htm;
    autoindex on;
  }

{% endif %}
  # Disallow access to hidden files and directories
  location ~ /\. {
    return 404;
    access_log off;
    log_not_found off;
  }

{% if (item.favicon is defined and item.favicon) or item.favicon is undefined %}
  location = /favicon.ico {
    try_files /favicon.ico =204;
    access_log off;
    log_not_found off;
  }

{% endif %}
{% if item.status is defined and item.status or nginx_default_status is defined and nginx_default_status %}
  location = /nginx_status {
    stub_status on;
    access_log off;
{% if nginx_default_status is defined and nginx_default_status %}
{% for address in nginx_default_status %}
    allow {{ address }};
{% endfor %}
{% endif %}
{% if item.status is defined and item.status %}
{% for address in item.status %}
    allow {{ address }};
{% endfor %}
{% endif %}
    deny all;
  }

{% endif %}
{% if nginx_tpl_default_server %}
        include /etc/nginx/site-default.d/*.conf;

{% endif %}
{% if (item.location is defined and item.location) or (item.location_list is defined and item.location_list) %}
{% if item.location_list is defined and item.location_list %}
{{ print_location_list(item.location_list) }}
{% endif %}
{% if item.location is defined and item.location %}
{{ print_location(item.location, item.location_allow, item.location_referers, item.location_deny) }}{% endif %}{% else %}
        location / {
{% block nginx_tpl_block_location_root %}
                try_files $uri $uri/ $uri.html $uri.htm /index.html /index.htm =404;
{% endblock %}
        }

{% endif %}
{% block nginx_tpl_block_custom_locations %}
{% endblock %}
{% endif %}
}

# vim:filetype=nginx