- name: Copy rails database configs
  template:
    src: 'config/database.yml.j2'
    dest: '{{ deploy_home }}/config/database.yml'

- name: Update gems
  command: bundle install --deployment --without={{ rails_deploy_bundle_without | difference([rails_deploy_system_env]) | join(' ') }}
           chdir={{ deploy_home }}
  changed_when: False
  when: rails_deploy_register_repo_status is defined and
        rails_deploy_register_repo_status | changed
  sudo_user: '{{ deploy_user }}'

- name: Create database
  command: bundle exec rake db:create RAILS_ENV={{ rails_deploy_system_env }}
           chdir={{ deploy_home }}
  sudo_user: '{{ deploy_user }}'
  register: rails_database_exists

# Load schema only when the database has just been created on the previows task
- name: Load database schema
  command: bundle exec rake db:schema:load RAILS_ENV={{ rails_deploy_system_env }}
           chdir={{ deploy_home }}
  when: rails_database_exists.stderr.find('already exists') == -1
  sudo_user: '{{ deploy_user }}'

- name: Run migrations
  command: bundle exec rake db:migrate RAILS_ENV={{ rails_deploy_system_env }}
           chdir={{ deploy_home }}
  sudo_user: '{{ deploy_user }}'


# puma configs

- name: Copy puma config file
  template: src=config/puma.rb.j2
            dest={{ deploy_home }}/config/puma.rb
            owner={{ deploy_user }} group={{ deploy_user }}

- name: Create src, log and run state paths
  file: path={{ item }}
      state=directory
      owner={{ deploy_user }} group={{ deploy_user }}
      mode=0755
  when: deploy_user is defined and deploy_user
  with_items:
    - '{{ rails_puma_LOG_PATH }}'
    - '{{ rails_puma_run }}'

- name: Create logrotate file
  template: src=etc/logrotate.d/service.j2
            dest=/etc/logrotate.d/{{ app_name }}
            owner=root group=root mode=0644

- name: Create application service
  template: src=etc/init.d/service.j2 dest=/etc/init.d/{{ app_name }}
            owner={{ deploy_user }} group={{ deploy_user }}
            mode=0755
  when: deploy_user is defined and deploy_user