##
# Install rvm
---
- name: Detect rvm binary
  stat: path={{ rvm_bin }}
  register: rvm_binary

- name: Detect rvm installer
  stat: path='{{ rvm_temp_path }}/rvm-installer.sh'
  register: local_rvm_installer

- name: Detect current rvm version
  command: '{{ rvm_bin }} version'
  changed_when: False
  register: rvm_current_version
  when: rvm_binary.stat.exists

- name: Detect stable rvm version
  uri:
    url: '{{ rvm_stable_vers }}'
    return_content: True
  register: rvm_version
  when: '"://" in rvm_stable_vers'

- name: Install rvm installer
  get_url:
    url: '{{ rvm_installer }}'
    dest: '{{ rvm_temp_path }}/rvm-installer.sh'
  when: not local_rvm_installer.stat.exists or rvm_upgrade

- name: Configure rvm installer
  file:
    path: '{{ rvm_temp_path }}/rvm-installer.sh'
    mode: 0755
  when: not rvm_binary.stat.exists or rvm_upgrade

- name: Install rvm stable
  command: >
    {{ rvm_temp_path }}/rvm-installer.sh stable
    --path {{ rvm_install_path }} {{ rvm_flags }}
  when: not rvm_binary.stat.exists

- name: Update rvm
  shell: '{{ rvm_bin }} get stable && {{ rvm_bin }} reload'
  when: rvm_binary.stat.exists and
        rvm_version.content | default(rvm_stable_vers) | replace('\n', '') > rvm_current_version.stdout.split()[1]

- name: Configure rvm
  command: '{{ rvm_bin }} autolibs 3'
  when: not rvm_binary.stat.exists
