---
- name: Check if MySQL server is installed
  stat:
    path: '/usr/bin/mysqld_safe'
  register: mysql_installed

- name: Install MySQL-related packages
  apt:
    name: '{{ item }}'
    state: 'latest'
    install_recommends: False
  register: mysql_install_status
  with_items: [ 'python-mysqldb', 'mysql-server', 'mysql-client', 'libmysqlclient-dev' ]

- name: Apply /etc/mysql/conf.d/mysqld.cnf configuration
  template:
    src: 'etc/mysql/conf.d/mysqld.cnf.j2'
    dest: '/etc/mysql/conf.d/mysqld.cnf'
    owner: 'root'
    group: 'root'
    mode: '0644'
  notify: [ 'Reload mysql' ]

- name: Apply /etc/mysql/conf.d/client.cnf configuration
  template:
    src: 'etc/mysql/conf.d/client.cnf.j2'
    dest: '/etc/mysql/conf.d/client.cnf'
    owner: 'root'
    group: 'root'
    mode: '0644'
  notify: [ 'Reload mysql' ]

- name: Restart MySQL service on first install
  service:
    name: 'mysql'
    state: 'restarted'
  when: ((mysql_installed is defined and not mysql_installed.stat.exists) and
         (mysql_install_status is defined and mysql_install_status.changed))

# ---- Secure MySQL installation ----

- name: Update mysql root password for all root accounts
  mysql_user:
    name: 'root'
    host: '{{ item }}'
    password: '{{ mysql_root_password }}'
  with_items: [ '{{ ansible_hostname }}', '127.0.0.1', '::1', 'localhost' ]

- name: Create /root/.my.cnf file with root password credentials
  template:
    src: 'root/my.cnf.j2'
    dest: '/root/.my.cnf'
    owner: 'root'
    group: 'root'
    mode: '0600'

- name: Delete anonymous mysql user
  mysql_user:
    user: ""
    host: '{{ item }}'
    state: 'absent'
  with_items: [ '{{ ansible_hostname }}', 'localhost' ]